{"ast":null,"code":"var _jsxFileName = \"/Users/learn/Desktop/listening-robot/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport GoodRobot from './components/GoodRobot';\nimport BadRobot from './components/BadRobot';\nimport KanyeBot from './components/KanyeBot';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.convertInput = userInput => {\n      let l = userInput.split(\"\").map((value, index) => {\n        if (index % 3 === 0) {\n          return \"B\";\n        } else if (index % 3 === 1) {\n          return \"L\";\n        } else if (index % 3 === 2) {\n          return \"A\";\n        }\n      });\n      return l;\n    };\n\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Type inside me bby ;)\",\n      value: this.state.text,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(GoodRobot, {\n      text: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(BadRobot, {\n      value: this.state.text,\n      convert: this.convertInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(KanyeBot, {\n      text: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learn/Desktop/listening-robot/src/App.js"],"names":["React","Component","GoodRobot","BadRobot","KanyeBot","App","constructor","props","handleChange","e","setState","text","target","value","convertInput","userInput","l","split","map","index","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACvBK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,YAPkB,GAOFC,CAAD,IAAM;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAACF,CAAC,CAACG,MAAF,CAASC;AAAf,OAAd;AACH,KATiB;;AAAA,SAUlBC,YAVkB,GAUFC,SAAD,IAAc;AACzB,UAAIC,CAAC,GAAGD,SAAS,CAACE,KAAV,CAAgB,EAAhB,EAAoBC,GAApB,CAAwB,CAACL,KAAD,EAAOM,KAAP,KAAiB;AAC7C,YAAGA,KAAK,GAAE,CAAP,KAAY,CAAf,EAAiB;AACb,iBAAO,GAAP;AACH,SAFD,MAEO,IAAGA,KAAK,GAAE,CAAP,KAAa,CAAhB,EAAmB;AACtB,iBAAO,GAAP;AACH,SAFM,MAEA,IAAGA,KAAK,GAAE,CAAP,KAAY,CAAf,EAAiB;AACpB,iBAAO,GAAP;AACH;AACJ,OARO,CAAR;AASA,aAAOH,CAAP;AACH,KArBiB;;AAEd,SAAKI,KAAL,GAAa;AACTT,MAAAA,IAAI,EAAC;AADI,KAAb;AAGH;;AAkBDU,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,WAAW,EAAG,uBADlB;AAEI,MAAA,KAAK,EAAI,KAAKD,KAAL,CAAWT,IAFxB;AAGI,MAAA,QAAQ,EAAI,KAAKH,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,SAAD;AACA,MAAA,IAAI,EAAI,KAAKY,KAAL,CAAWT,IADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EASI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAI,KAAKS,KAAL,CAAWT,IADxB;AAEI,MAAA,OAAO,EAAI,KAAKG,YAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAaI,oBAAC,QAAD;AACA,MAAA,IAAI,EAAI,KAAKM,KAAL,CAAWT,IADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAmBH;;AA5CsB;;AA+C3B,eAAeN,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport GoodRobot from './components/GoodRobot'\nimport BadRobot from './components/BadRobot'\nimport KanyeBot from './components/KanyeBot'\n\n\nclass App extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            text:\"\"\n        }\n    }\n\n    handleChange = (e) =>{\n        this.setState({text:e.target.value})\n    }\n    convertInput = (userInput) =>{\n        let l = userInput.split(\"\").map((value,index) => {\n            if(index %3 ===0){\n                return \"B\"\n            } else if(index %3 === 1) {\n                return \"L\"\n            } else if(index %3 ===2){\n                return \"A\"\n            }\n        })\n        return l\n    }\n\n    render(){\n        return(\n            <div>\n                <input\n                    placeholder = \"Type inside me bby ;)\"\n                    value = {this.state.text}\n                    onChange = {this.handleChange}\n                />\n                <GoodRobot\n                text = {this.state.text}\n                />\n                <BadRobot\n                    value = {this.state.text}\n                    convert = {this.convertInput}\n                />\n                <KanyeBot\n                text = {this.state.text}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}